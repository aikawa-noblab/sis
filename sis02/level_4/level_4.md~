# 構造化プログラミングと画面の描き換え制御


### 構造化プログラミング


Processingでは、おおまかに

- 初期化部 setup()
- メインループ draw()
- その他の関数・・・

といった構造に従い、プログラムを書きます。この授業で紹介するほとんどのプログラム群は、 この構造に従った記述になっていますので、よく覚えておいてください。
それでは、この構造を学ぶために、以下のリンク先にあるサンプルプログラム4-1を実装してみましょう。


<a href="./sample4-1.pde" target="_blank">サンプルプログラム4-1</a>


サンプルプログラム4-1は、適宜、コピー＆ペーストで利用してください。



###### サンプルプログラム4-1の解説
サンプルプログラム4-1の初期化部において<span style="color: red;">「frameRate(30)」</span>というコマンドが出てきました。Processing では、draw部分が1ループ実行された時点での画面をフレームと呼び、このループが1秒間にどのくらいの頻度で実行されるのかを示す指標を設定するのが、frameRateというコマンドになります。これはあくまでも指標であり、計算機の処理速度、draw部分の処理量などによって、このフレームレートが実現されない場合もある。自分の計算機環境を考慮しながら、この値を設定してみましょう。

 

 

### 画面の書き換え制御

 

画面を書き換える制御を使いこなせるようになると、魅力的なアニメーション等を作成することができるようになります。 ここでは、大きく2種類の画面の書き換え制御方法を紹介します。

###### 制御方法その1
まずは以下のサンプルプログラム4-2を動かしてみよう。

<a href="./sample4-2.pde" target="_blank">サンプルプログラム4-2</a>

このプログラムでは、サンプルプログラム4-1と異なり、メインループdraw() の最初の部分で、<span style="color: red;">background(255)</span> を実行し画面を真っ白に書き換えています。これにより、白い画面中に、様々な色の円が現れてはすぐに消える、というアニメーションを実現することができます。

<span style="color: red;">※frameRate() の設定値を変更し、アニメーションの変化を観測してみると面白いでしょう。</span>

 

###### 制御方法その2
以下のサンプルプログラム4-3を動かしてみよう。

<a href="./sample4-3.pde" target="_blank">サンプルプログラム4-3</a>

このプログラムのポイントは、<span style="color: red;">「fadeToWhite()」</span>という関数によって画面を書き換えているところになります。この関数は、描画窓を同じサイズの四角形を、透明度30%の白色で色づけし、上書きしてます。これにより、円が一度描画された部分は、数フレーム先まで残像が残るようになり、 フェード効果が得られます。